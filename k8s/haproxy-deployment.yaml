---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
  namespace: hapostgresql
  labels:
    app: haproxy
data:
  haproxy.cfg: |
    global
        maxconn 100
        log stdout local0

    defaults
        log global
        mode tcp
        retries 2
        timeout client 30m
        timeout connect 4s
        timeout server 30m
        timeout check 5s

    # Stats interface
    listen stats
        mode http
        bind *:7000
        stats enable
        stats uri /
        stats refresh 30s
        stats realm HAProxy\ Statistics
        stats auth admin:password

    # PostgreSQL Master (Read/Write) - Direct connection to Docker containers via Minikube host
    listen postgres_master
        bind *:5432
        option httpchk GET /master
        http-check expect status 200
        default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
        server patroni-postgres-1 ${DOCKER_HOST_IP}:5432 maxconn 100 check port 8008
        server patroni-postgres-2 ${DOCKER_HOST_IP}:5433 maxconn 100 check port 8009
        server patroni-postgres-3 ${DOCKER_HOST_IP}:5434 maxconn 100 check port 8010

    # PostgreSQL Replicas (Read Only) - Direct connection to Docker containers via Minikube host
    listen postgres_replicas
        bind *:5001
        option httpchk GET /replica
        http-check expect status 200
        balance roundrobin
        default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
        server patroni-postgres-1 ${DOCKER_HOST_IP}:5432 maxconn 100 check port 8008
        server patroni-postgres-2 ${DOCKER_HOST_IP}:5433 maxconn 100 check port 8009
        server patroni-postgres-3 ${DOCKER_HOST_IP}:5434 maxconn 100 check port 8010
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
  namespace: hapostgresql
  labels:
    app: haproxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      initContainers:
      - name: setup-config
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          # Get the Docker host IP (Minikube host IP)
          DOCKER_HOST_IP=$(getent hosts host.minikube.internal | awk '{ print $1 }' || echo "192.168.49.1")
          echo "Using Docker host IP: $DOCKER_HOST_IP"
          # Replace environment variables in haproxy config
          sed "s/\${DOCKER_HOST_IP}/$DOCKER_HOST_IP/g" /tmp/haproxy-template/haproxy.cfg > /tmp/haproxy-config/haproxy.cfg
          cat /tmp/haproxy-config/haproxy.cfg
        volumeMounts:
        - name: haproxy-config-template
          mountPath: /tmp/haproxy-template
        - name: haproxy-config-processed
          mountPath: /tmp/haproxy-config
      containers:
      - name: haproxy
        image: haproxy:2.8-alpine
        ports:
        - containerPort: 5001
          name: pg-replica
        - containerPort: 5432
          name: postgres
        - containerPort: 7000
          name: stats
        volumeMounts:
        - name: haproxy-config-processed
          mountPath: /usr/local/etc/haproxy
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 7000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 7000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: haproxy-config-template
        configMap:
          name: haproxy-config
      - name: haproxy-config-processed
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: haproxy
  namespace: hapostgresql
  labels:
    app: haproxy
spec:
  selector:
    app: haproxy
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  - port: 5001
    targetPort: 5001
    name: pg-replica
  - port: 7000
    targetPort: 7000
    name: stats
---
# Service for PostgreSQL Master (Read/Write)
apiVersion: v1
kind: Service
metadata:
  name: postgres-master
  namespace: hapostgresql
  labels:
    app: postgres
    role: master
spec:
  selector:
    app: haproxy
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
---
# Service for PostgreSQL Replicas (Read Only)
apiVersion: v1
kind: Service
metadata:
  name: postgres-replica
  namespace: hapostgresql
  labels:
    app: postgres
    role: replica
spec:
  selector:
    app: haproxy
  ports:
  - port: 5432
    targetPort: 5001
    name: postgres
---
# HAProxy Stats Service
apiVersion: v1
kind: Service
metadata:
  name: haproxy-stats
  namespace: hapostgresql
  labels:
    app: haproxy
spec:
  selector:
    app: haproxy
  ports:
  - port: 7000
    targetPort: 7000
    name: stats
