scope: postgres-cluster
namespace: /patroni/
name: ${HOSTNAME}

restapi:
  listen: 0.0.0.0:8008
  connect_address: ${HOSTNAME}:8008

etcd:
  hosts: ${ETCD_HOSTS}

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 30
    maximum_lag_on_failover: 1048576
    master_start_timeout: 300
    synchronous_mode: false
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        max_connections: 200
        shared_preload_libraries: 'pg_stat_statements'
        wal_level: replica
        hot_standby: "on"
        wal_keep_segments: 8
        max_wal_senders: 10
        max_replication_slots: 10
        wal_log_hints: "on"
        archive_mode: "on"
        archive_timeout: 1800s
        archive_command: mkdir -p ../wal_archive && test ! -f ../wal_archive/%f && cp %p ../wal_archive/%f
        logging_collector: 'on'
        log_destination: 'stderr'
        log_directory: '/home/postgres/pgdata/pgroot/pg_log'
        log_filename: 'postgresql-%a.log'
        log_truncate_on_rotation: 'on'
        log_rotation_age: '1d'
        log_min_duration_statement: 1000
        log_checkpoints: 'on'
        log_connections: 'on'
        log_disconnections: 'on'
        log_lock_waits: 'on'
        log_temp_files: 0
        log_autovacuum_min_duration: 0
        log_error_verbosity: default
  initdb:
  - encoding: UTF8
  - data-checksums
  pg_hba:
  - host replication replicator 127.0.0.1/32 md5
  - host replication replicator 0.0.0.0/0 md5
  - host all all 0.0.0.0/0 md5
  users:
    admin:
      password: ${POSTGRES_PASSWORD}
      options:
        - createrole
        - createdb
    replicator:
      password: ${REPLICATION_PASSWORD}
      options:
        - replication

postgresql:
  listen: 0.0.0.0:5432
  connect_address: ${HOSTNAME}:5432
  data_dir: /home/postgres/pgdata/pgroot/data
  bin_dir: /usr/lib/postgresql/15/bin
  pgpass: /tmp/pgpass
  authentication:
    replication:
      username: replicator
      password: ${REPLICATION_PASSWORD}
    superuser:
      username: postgres
      password: ${POSTGRES_PASSWORD}
    rewind:
      username: replicator
      password: ${REPLICATION_PASSWORD}
  parameters:
    unix_socket_directories: '/var/run/postgresql'

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false
